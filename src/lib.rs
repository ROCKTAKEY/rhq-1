extern crate toml;
extern crate walkdir;
extern crate shellexpand;
extern crate regex;
extern crate url;
#[macro_use]
extern crate log;
#[macro_use]
extern crate serde_derive;
#[macro_use]
extern crate error_chain;

/// defines error types (automatically generated by error_chain)
pub mod errors {
  error_chain!{
    foreign_links {
      Io(::std::io::Error);
      TomlDe(::toml::de::Error);
      ShellExpand(::shellexpand::LookupError<::std::env::VarError>);
      UrlParse(::url::ParseError);
    }
  }
}

pub mod config;
pub mod local;
pub mod remote;

pub fn list_repositories() -> errors::Result<()> {
  let config = config::Config::load()?;
  for repo in local::list_repositories(&config.root) {
    println!("{}", repo.path().display());
  }

  Ok(())
}
