# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=rhq

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl DISABLE_TESTS=1

    # OSX
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1

    # Other architectures
    - env: TARGET=aarch64-unknown-linux-gnu DISABLE_TESTS=1
    - env: TARGET=arm-linux-androideabi DISABLE_TESTS=1

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly

before_install: set -e

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
      secure: NkwNUjc5BRFEuFVVHigcbWDP9ZrM0OzvqO4/IO1zi7GfpXv11GLOL1GNq70rfcJ2XEcmNOBGOCDhBbv4SrvOg+m6/Vq2WpgTl2uHHc6YiVY/L5uON0FoxbJumx6PYcMfoN7fnHVVUEh+lFeDIp085/GIjYa2CdcVV6/G103Qq9Gqxnt7QL84qvaaLBdo2O8bu73yf7aPPd9B0Ag9RRCxEYgM/bhlff3nlRxsr+onHoBE/7cVRKUZr4u4pfApArLoVAh4cBk58FSz/ks7ZzppQxNziRaiXGgcZyCPZ2F02XVLasJxPC6UARh0e4o0yi7V7vn8ELcG6ji24x5esIcWvbO3dCkHgU24Njts62QvvhnxjtaIU3dWAFISrR5nWZMLENwtY7P6yxjcH4qHNYQy6MfHeBxYNR5G+ZOlggfmJCwavuL+EnVoGf0yQlVEPT38dfkzBUa0B/9jxMuRP2QaRQfHZfeZzvdam0I30AdMUhfxha8lGXZrvzfjvbEdEXqesrXE04noXJ17hzjwusvCg7gpMJ7vf4iQZS0ZZ3OIKJLZUW9vUin+ejBKjqW3QTcE9GXqTHLp/A1zpdQPBNtaLH/CWaPCsVQvGMGyfHPP/0czpitJaSVezbHS0ZEZj7uPgtEJxGGFCpu56B0mma4FFVaY8+fTlDZ725VD/VKE3vA=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master
    - /^wip\/.*$/

notifications:
  email:
    on_success: never
